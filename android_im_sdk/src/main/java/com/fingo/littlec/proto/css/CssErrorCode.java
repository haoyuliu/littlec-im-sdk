// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: css/errcode.proto

package com.fingo.littlec.proto.css;

public final class CssErrorCode {
  private CssErrorCode() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code css.errcode.ErrorCode}
   */
  public enum ErrorCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>OK = 0;</code>
     */
    OK(0),
    /**
     * <code>SERVER_INNER_ERROR = -1;</code>
     */
    SERVER_INNER_ERROR(-1),
    /**
     * <code>SUCCESS = 1;</code>
     */
    SUCCESS(1),
    /**
     * <code>HMS_DATABASE_ERROR = 2;</code>
     */
    HMS_DATABASE_ERROR(2),
    /**
     * <code>HMS_SESSION_NOT_EXIST = 3;</code>
     */
    HMS_SESSION_NOT_EXIST(3),
    /**
     * <code>HMS_MESSAGE_STORE_ERROR = 4;</code>
     */
    HMS_MESSAGE_STORE_ERROR(4),
    /**
     * <code>HMS_ERROR_RETRACT_MESSAGE = 5;</code>
     */
    HMS_ERROR_RETRACT_MESSAGE(5),
    /**
     * <code>HMS_INNER_ERROR = 6;</code>
     */
    HMS_INNER_ERROR(6),
    /**
     * <code>HMS_MESSAGE_NO_ALL_REMOVED = 7;</code>
     */
    HMS_MESSAGE_NO_ALL_REMOVED(7),
    /**
     * <code>HMS_PARAM_FORMAT_ERROR = 8;</code>
     */
    HMS_PARAM_FORMAT_ERROR(8),
    /**
     * <code>USER_NOT_LOGIN = 100;</code>
     */
    USER_NOT_LOGIN(100),
    /**
     * <code>SESSION_STATUS_ERROR = 101;</code>
     */
    SESSION_STATUS_ERROR(101),
    /**
     * <code>CHAT_FROM_IS_EMPTY = 201;</code>
     */
    CHAT_FROM_IS_EMPTY(201),
    /**
     * <code>CHAT_RECEIVER_NOT_EXIST = 202;</code>
     */
    CHAT_RECEIVER_NOT_EXIST(202),
    /**
     * <code>CHAT_MESSAGE_SAVE_FAILED = 203;</code>
     */
    CHAT_MESSAGE_SAVE_FAILED(203),
    /**
     * <code>CHAT_BUNDLE_BROKEN = 204;</code>
     */
    CHAT_BUNDLE_BROKEN(204),
    /**
     * <code>PUSH_BUNDLEID_EMPYT = 303;</code>
     */
    PUSH_BUNDLEID_EMPYT(303),
    /**
     * <code>PUSH_CREATE_CRTIFICATE_FAILED = 304;</code>
     */
    PUSH_CREATE_CRTIFICATE_FAILED(304),
    /**
     * <code>PUSH_DELETE_CRTIFICATE_FAILED = 305;</code>
     */
    PUSH_DELETE_CRTIFICATE_FAILED(305),
    /**
     * <code>PUSH_CLEAR_TOKEN_FAILED = 306;</code>
     */
    PUSH_CLEAR_TOKEN_FAILED(306),
    /**
     * <code>PUSH_SET_TOKEN_FAILED = 307;</code>
     */
    PUSH_SET_TOKEN_FAILED(307),
    /**
     * <code>PUSH_SET_BADGE_FAILED = 308;</code>
     */
    PUSH_SET_BADGE_FAILED(308),
    /**
     * <code>CONNECTOR_USER_ALREADY_LOGIN = 401;</code>
     */
    CONNECTOR_USER_ALREADY_LOGIN(401),
    /**
     * <pre>
     * 请求客服ID空
     * </pre>
     *
     * <code>CSS_USER_ID_NULL = 500;</code>
     */
    CSS_USER_ID_NULL(500),
    /**
     * <pre>
     * 请求客服国家码空
     * </pre>
     *
     * <code>CSS_USER_COUNTRY_CODE_NULL = 501;</code>
     */
    CSS_USER_COUNTRY_CODE_NULL(501),
    /**
     * <pre>
     * 请求客服时语言属性空
     * </pre>
     *
     * <code>CSS_USER_LANGUAGE_NULL = 502;</code>
     */
    CSS_USER_LANGUAGE_NULL(502),
    /**
     * <pre>
     * 客服不在线
     * </pre>
     *
     * <code>CSS_CS_OFFLINE = 503;</code>
     */
    CSS_CS_OFFLINE(503),
    /**
     * <pre>
     * 无可用客服
     * </pre>
     *
     * <code>CSS_NO_USABLE_CS = 504;</code>
     */
    CSS_NO_USABLE_CS(504),
    /**
     * <pre>
     * 绑定关系不存在
     * </pre>
     *
     * <code>CSS_BUNDLE_NOT_EXISTS = 505;</code>
     */
    CSS_BUNDLE_NOT_EXISTS(505),
    /**
     * <pre>
     * 绑定失败
     * </pre>
     *
     * <code>CSS_BUNDLE_FAIL = 506;</code>
     */
    CSS_BUNDLE_FAIL(506),
    /**
     * <pre>
     * 绑定超时
     * </pre>
     *
     * <code>CSS_BUNDLE_OVERDUE = 507;</code>
     */
    CSS_BUNDLE_OVERDUE(507),
    /**
     * <pre>
     * FAQ不存在
     * </pre>
     *
     * <code>CSS_FAQ_NOT_EXISTS = 508;</code>
     */
    CSS_FAQ_NOT_EXISTS(508),
    /**
     * <pre>
     * 语言没有指定
     * </pre>
     *
     * <code>CSS_LANGUAGE_NOT_SPECIFIED = 509;</code>
     */
    CSS_LANGUAGE_NOT_SPECIFIED(509),
    /**
     * <pre>
     * 客服id空
     * </pre>
     *
     * <code>CSS_CS_ID_NULL = 510;</code>
     */
    CSS_CS_ID_NULL(510),
    /**
     * <pre>
     * 服务状态空
     * </pre>
     *
     * <code>CSS_SERVICE_STATUS_NULL = 511;</code>
     */
    CSS_SERVICE_STATUS_NULL(511),
    /**
     * <pre>
     * 非法的服务状态
     * </pre>
     *
     * <code>CSS_ILLEGAL_STATUS = 512;</code>
     */
    CSS_ILLEGAL_STATUS(512),
    /**
     * <pre>
     * 客服不存在
     * </pre>
     *
     * <code>CSS_CS_NOT_EXISTS = 513;</code>
     */
    CSS_CS_NOT_EXISTS(513),
    /**
     * <pre>
     * 不是工作时间
     * </pre>
     *
     * <code>CSS_NOT_WORKING_HOURS = 514;</code>
     */
    CSS_NOT_WORKING_HOURS(514),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OK = 0;</code>
     */
    public static final int OK_VALUE = 0;
    /**
     * <code>SERVER_INNER_ERROR = -1;</code>
     */
    public static final int SERVER_INNER_ERROR_VALUE = -1;
    /**
     * <code>SUCCESS = 1;</code>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <code>HMS_DATABASE_ERROR = 2;</code>
     */
    public static final int HMS_DATABASE_ERROR_VALUE = 2;
    /**
     * <code>HMS_SESSION_NOT_EXIST = 3;</code>
     */
    public static final int HMS_SESSION_NOT_EXIST_VALUE = 3;
    /**
     * <code>HMS_MESSAGE_STORE_ERROR = 4;</code>
     */
    public static final int HMS_MESSAGE_STORE_ERROR_VALUE = 4;
    /**
     * <code>HMS_ERROR_RETRACT_MESSAGE = 5;</code>
     */
    public static final int HMS_ERROR_RETRACT_MESSAGE_VALUE = 5;
    /**
     * <code>HMS_INNER_ERROR = 6;</code>
     */
    public static final int HMS_INNER_ERROR_VALUE = 6;
    /**
     * <code>HMS_MESSAGE_NO_ALL_REMOVED = 7;</code>
     */
    public static final int HMS_MESSAGE_NO_ALL_REMOVED_VALUE = 7;
    /**
     * <code>HMS_PARAM_FORMAT_ERROR = 8;</code>
     */
    public static final int HMS_PARAM_FORMAT_ERROR_VALUE = 8;
    /**
     * <code>USER_NOT_LOGIN = 100;</code>
     */
    public static final int USER_NOT_LOGIN_VALUE = 100;
    /**
     * <code>SESSION_STATUS_ERROR = 101;</code>
     */
    public static final int SESSION_STATUS_ERROR_VALUE = 101;
    /**
     * <code>CHAT_FROM_IS_EMPTY = 201;</code>
     */
    public static final int CHAT_FROM_IS_EMPTY_VALUE = 201;
    /**
     * <code>CHAT_RECEIVER_NOT_EXIST = 202;</code>
     */
    public static final int CHAT_RECEIVER_NOT_EXIST_VALUE = 202;
    /**
     * <code>CHAT_MESSAGE_SAVE_FAILED = 203;</code>
     */
    public static final int CHAT_MESSAGE_SAVE_FAILED_VALUE = 203;
    /**
     * <code>CHAT_BUNDLE_BROKEN = 204;</code>
     */
    public static final int CHAT_BUNDLE_BROKEN_VALUE = 204;
    /**
     * <code>PUSH_BUNDLEID_EMPYT = 303;</code>
     */
    public static final int PUSH_BUNDLEID_EMPYT_VALUE = 303;
    /**
     * <code>PUSH_CREATE_CRTIFICATE_FAILED = 304;</code>
     */
    public static final int PUSH_CREATE_CRTIFICATE_FAILED_VALUE = 304;
    /**
     * <code>PUSH_DELETE_CRTIFICATE_FAILED = 305;</code>
     */
    public static final int PUSH_DELETE_CRTIFICATE_FAILED_VALUE = 305;
    /**
     * <code>PUSH_CLEAR_TOKEN_FAILED = 306;</code>
     */
    public static final int PUSH_CLEAR_TOKEN_FAILED_VALUE = 306;
    /**
     * <code>PUSH_SET_TOKEN_FAILED = 307;</code>
     */
    public static final int PUSH_SET_TOKEN_FAILED_VALUE = 307;
    /**
     * <code>PUSH_SET_BADGE_FAILED = 308;</code>
     */
    public static final int PUSH_SET_BADGE_FAILED_VALUE = 308;
    /**
     * <code>CONNECTOR_USER_ALREADY_LOGIN = 401;</code>
     */
    public static final int CONNECTOR_USER_ALREADY_LOGIN_VALUE = 401;
    /**
     * <pre>
     * 请求客服ID空
     * </pre>
     *
     * <code>CSS_USER_ID_NULL = 500;</code>
     */
    public static final int CSS_USER_ID_NULL_VALUE = 500;
    /**
     * <pre>
     * 请求客服国家码空
     * </pre>
     *
     * <code>CSS_USER_COUNTRY_CODE_NULL = 501;</code>
     */
    public static final int CSS_USER_COUNTRY_CODE_NULL_VALUE = 501;
    /**
     * <pre>
     * 请求客服时语言属性空
     * </pre>
     *
     * <code>CSS_USER_LANGUAGE_NULL = 502;</code>
     */
    public static final int CSS_USER_LANGUAGE_NULL_VALUE = 502;
    /**
     * <pre>
     * 客服不在线
     * </pre>
     *
     * <code>CSS_CS_OFFLINE = 503;</code>
     */
    public static final int CSS_CS_OFFLINE_VALUE = 503;
    /**
     * <pre>
     * 无可用客服
     * </pre>
     *
     * <code>CSS_NO_USABLE_CS = 504;</code>
     */
    public static final int CSS_NO_USABLE_CS_VALUE = 504;
    /**
     * <pre>
     * 绑定关系不存在
     * </pre>
     *
     * <code>CSS_BUNDLE_NOT_EXISTS = 505;</code>
     */
    public static final int CSS_BUNDLE_NOT_EXISTS_VALUE = 505;
    /**
     * <pre>
     * 绑定失败
     * </pre>
     *
     * <code>CSS_BUNDLE_FAIL = 506;</code>
     */
    public static final int CSS_BUNDLE_FAIL_VALUE = 506;
    /**
     * <pre>
     * 绑定超时
     * </pre>
     *
     * <code>CSS_BUNDLE_OVERDUE = 507;</code>
     */
    public static final int CSS_BUNDLE_OVERDUE_VALUE = 507;
    /**
     * <pre>
     * FAQ不存在
     * </pre>
     *
     * <code>CSS_FAQ_NOT_EXISTS = 508;</code>
     */
    public static final int CSS_FAQ_NOT_EXISTS_VALUE = 508;
    /**
     * <pre>
     * 语言没有指定
     * </pre>
     *
     * <code>CSS_LANGUAGE_NOT_SPECIFIED = 509;</code>
     */
    public static final int CSS_LANGUAGE_NOT_SPECIFIED_VALUE = 509;
    /**
     * <pre>
     * 客服id空
     * </pre>
     *
     * <code>CSS_CS_ID_NULL = 510;</code>
     */
    public static final int CSS_CS_ID_NULL_VALUE = 510;
    /**
     * <pre>
     * 服务状态空
     * </pre>
     *
     * <code>CSS_SERVICE_STATUS_NULL = 511;</code>
     */
    public static final int CSS_SERVICE_STATUS_NULL_VALUE = 511;
    /**
     * <pre>
     * 非法的服务状态
     * </pre>
     *
     * <code>CSS_ILLEGAL_STATUS = 512;</code>
     */
    public static final int CSS_ILLEGAL_STATUS_VALUE = 512;
    /**
     * <pre>
     * 客服不存在
     * </pre>
     *
     * <code>CSS_CS_NOT_EXISTS = 513;</code>
     */
    public static final int CSS_CS_NOT_EXISTS_VALUE = 513;
    /**
     * <pre>
     * 不是工作时间
     * </pre>
     *
     * <code>CSS_NOT_WORKING_HOURS = 514;</code>
     */
    public static final int CSS_NOT_WORKING_HOURS_VALUE = 514;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorCode valueOf(int value) {
      return forNumber(value);
    }

    public static ErrorCode forNumber(int value) {
      switch (value) {
        case 0: return OK;
        case -1: return SERVER_INNER_ERROR;
        case 1: return SUCCESS;
        case 2: return HMS_DATABASE_ERROR;
        case 3: return HMS_SESSION_NOT_EXIST;
        case 4: return HMS_MESSAGE_STORE_ERROR;
        case 5: return HMS_ERROR_RETRACT_MESSAGE;
        case 6: return HMS_INNER_ERROR;
        case 7: return HMS_MESSAGE_NO_ALL_REMOVED;
        case 8: return HMS_PARAM_FORMAT_ERROR;
        case 100: return USER_NOT_LOGIN;
        case 101: return SESSION_STATUS_ERROR;
        case 201: return CHAT_FROM_IS_EMPTY;
        case 202: return CHAT_RECEIVER_NOT_EXIST;
        case 203: return CHAT_MESSAGE_SAVE_FAILED;
        case 204: return CHAT_BUNDLE_BROKEN;
        case 303: return PUSH_BUNDLEID_EMPYT;
        case 304: return PUSH_CREATE_CRTIFICATE_FAILED;
        case 305: return PUSH_DELETE_CRTIFICATE_FAILED;
        case 306: return PUSH_CLEAR_TOKEN_FAILED;
        case 307: return PUSH_SET_TOKEN_FAILED;
        case 308: return PUSH_SET_BADGE_FAILED;
        case 401: return CONNECTOR_USER_ALREADY_LOGIN;
        case 500: return CSS_USER_ID_NULL;
        case 501: return CSS_USER_COUNTRY_CODE_NULL;
        case 502: return CSS_USER_LANGUAGE_NULL;
        case 503: return CSS_CS_OFFLINE;
        case 504: return CSS_NO_USABLE_CS;
        case 505: return CSS_BUNDLE_NOT_EXISTS;
        case 506: return CSS_BUNDLE_FAIL;
        case 507: return CSS_BUNDLE_OVERDUE;
        case 508: return CSS_FAQ_NOT_EXISTS;
        case 509: return CSS_LANGUAGE_NOT_SPECIFIED;
        case 510: return CSS_CS_ID_NULL;
        case 511: return CSS_SERVICE_STATUS_NULL;
        case 512: return CSS_ILLEGAL_STATUS;
        case 513: return CSS_CS_NOT_EXISTS;
        case 514: return CSS_NOT_WORKING_HOURS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
            public ErrorCode findValueByNumber(int number) {
              return ErrorCode.forNumber(number);
            }
          };

    private final int value;

    private ErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:css.errcode.ErrorCode)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
